# AWS buildspec.yml
#
version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18

  install:
      - npm install -g testcafe

  build:
    commands:
      # Start the OWASP ModSecurity Core Rule Set and Pixi with its DB with docker-compose
      # OWASP ModSecurity Core Rule Set Container (Apache Reverse Proxy)
      # owasp/modsecurity-crs
      # See https://coreruleset.org/
      # ModSecurity Tuning:
      # See https://www.netnea.com/cms/apache-tutorial-8_handling-false-positives-modsecurity-core-rule-set/
      - docker-compose up -d

      # Application Tests with Testcafe
      # skip-js-errors because of: Uncaught Error: Bootstrap tooltips require Tether
      - testcafe "chrome:headless" testcafe/tests/test.js --skip-js-errors

      # Application Tests with CRS with Testcafe
      - testcafe "chrome:headless" testcafe/tests/testcrs.js --skip-js-errors
      #- docker cp testcafe:/tmp/res.xml /tmp/test-results/

      # WAF Tests with malicous request to test WAF itself
      - testcafe "chrome:headless" testcafe/tests/testwaf.js --skip-js-errors

      # Fail if ModSecurity log is not empty
      # Show ModSecurity logs of Testcafe Tests
      - docker exec pixicrs_crs_1 cat /var/log/apache2/error.log | grep ModSecurity | grep -v notice #| grep -vi "My evil WAF Test" | grep -v " Score: 30" | grep msg && exit 1 || exit 0

      # If not empty -> Repair your application OR
      #              -> ModSecurity Tuning:
      # See https://www.netnea.com/cms/apache-tutorial-8_handling-false-positives-modsecurity-core-rule-set/ OR
      #              -> GitHub issue: https://github.com/SpiderLabs/owasp-modsecurity-crs
              
      # Fail if ModSecurity log does not contain WAF Test String "My evil WAF Test"
      # '<script>alert("My evil WAF Test")</script>'
      # Search for WAF Test String "My evil WAF Test" in ModSecurity logs
      - docker exec pixicrs_crs_1 cat /var/log/apache2/error.log
      # If empty -> WAF Test String <script>alert(My evil WAF Test)</script>
      # did not trigger a CRS rule. 
      # That means CRS is not working properly or test was aborted.
#              
      
